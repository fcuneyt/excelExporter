var excelExporter = {};
(function () {
	var m = [], n = [], r = function (e) { for (var c = -1, a = 0; a < n.length; a++) { var f = n[a]; if (f[e]) { c = n.indexOf(f); break } } return c }, u = function (e, c) { for (var a = 0; a < e.length; a++) { for (var f = { key: e[a], parent: c }, b = !1, g = 0; g < m.length; g++) { var d = m[g], d = d.key === f.key && d.parent === f.parent, h = r((0 < f.parent.length ? f.parent + "." : "") + f.key); if (d || 0 < n.length && -1 === h) { b = !0; break } } b || m.push(f) } }, v = function (e, c) { for (var a = -1, f = 0; f < m.length; f++) { var b = m[f]; if (b.key === e && b.parent === c) { a = m.indexOf(b); break } } return a }, w = [], t = function (e,
	c, a, f) {
		for (var b = [], g = 0; g < a.length; g++) {
			var d = a[g], h = c[d], k = r((0 < f.length ? f + "." : "") + d); if ("[object Array]" === Object.prototype.toString.call(h)) {
				var k = Object.keys(h[0]), p = v(d, f); -1 !== p && m.splice(p, 1); u(k, d); for (p = 0; p < h.length; p++) {
					var l; if (0 < n.length) { var q = -1; for (l = 0; l < k.length && (q = r(d + "." + k[l]), -1 === q) ; l++); if (-1 !== q) { l = document.createElement("tr"); for (b = 0; b < q; b++) l.appendChild(document.createElement("td")); b = t(l, h[p], k, d); b.push(l) } } else {
						l = document.createElement("tr"); b = v(k[0], d); for (q = 0; q < b; q++) l.appendChild(document.createElement("td"));
						b = t(l, h[p], k, d); b.push(l)
					}
				}
			} else if ("object" === typeof h) k = Object.keys(h), b = v(d, f), -1 !== b && m.splice(b, 1), u(k, d), b = t(e, h, k, d); else if (0 === n.length || -1 !== k) d = document.createElement("td"), d.innerHTML = h ? h : "", e.appendChild(d)
		} w.concat(b); return w
	}, x = function (e, c) {
		if (!c) {
			var a = new Date, f = a.getFullYear().toString(), b = (a.getMonth() + 1).toString(), g = a.getDate().toString(), d = a.getHours().toString(), a = a.getMinutes().toString(); c = "export_" + f + (b[1] ? b : "0" + b[0]) + (g[1] ? g : "0" + g[0]) + "-" + (d[1] ? d : "0" + d[0]) + (a[1] ? a : "0" +
			a[0]) + ".xls"
		} -1 === c.indexOf(".xls") && (c += ".xls"); f = encodeURIComponent('<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head><body><table>{table}</table></body></html>'.replace("{table}",
		e.innerHTML)); b = document.createElement("a"); b.href = "data:application/vnd.ms-excel;charset=utf-8," + f; b.download = c; document.body.appendChild(b); b.click(); document.body.removeChild(b)
	}; this.fromTable = function (e, c) { var a = document.getElementById(e); x(a, c) }; this.fromJson = function (e, c, a, f) {
		a && 0 < a.length && (n = a); if ("object" !== typeof e) try { e = JSON.parse(e) } catch (k) { throw k; } m = []; c = e[c]; "[object Array]" === Object.prototype.toString.call(c) ? e = Object.keys(c[0]) : (e = Object.keys(c), c = [c]); u(e, ""); var b = e; e = document.createElement("table");
		e.id = "Hede"; a = []; for (var g = 0; g < c.length; g++) { w = []; var d = document.createElement("tr"), h = t(d, c[g], b, ""); a.push(d); for (d = 0; d < h.length; d++) a.push(h[d]) } for (c = 0; c < a.length; c++) e.appendChild(a[c]); c = e.insertRow(0); for (a = 0; a < m.length; a++) b = document.createElement("td"), g = m[a], g = (0 < g.parent.length ? g.parent + "." : "") + g.key, h = n[r(g)], b.innerText = h ? h[g] : g, c.appendChild(b); x(e, f)
	}
}).apply(excelExporter);
